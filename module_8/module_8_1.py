# Домашнее задание по уроку "Try и Except".
#
# Задание "Программистам всё можно":
# Пора разрушать шаблоны привычного нам Python! Вот вас раздражает, что мы не можем сложить число(int) и строку(str)?
# Давайте исправим это недоразумение!
#
# Реализуйте следующую функцию:
# add_everything_up, будет складывать числа(int, float) и строки(str)
#
# Описание функции:
# add_everything_up(a, b) принимает a и b, которые могут быть как числами(int, float), так и строками(str).
# TypeError - когда a и b окажутся разными типами (числом и строкой), то возвращать строковое представление этих двух
# данных вместе (в том же порядке). Во всех остальных случаях выполнять стандартные действия.
#
# Примечания:
# Конструкции try-except в функции выполняют строго ту обработку, которая написана в задании (обращайте на важность
# порядка передачи данных).
# Если хотите дополнить функции своими исключениями или написать отдельно дополнительно собственные функции - это не
# запрещено, мы не против, чтобы вы больше экспериментировали. Но в первую очередь выполните поставленную задачу.
#
# Файл module_8_1.py и загрузите его на ваш GitHub репозиторий. В решении пришлите ссылку на него.

def add_everything_up(a, b):
    try:
        result = a + b
        return round(result, 3)
    except TypeError as ext:
        result = f'{str(a)}{str(b)}'
        return result


def add_everything_up_option_2(a, b):
    if not isinstance(a, str) and not isinstance(b, str):
        return round((a + b), 3)
    else:
        a = str(a)
        b = str(b)
        return f'{a}{b}'


# Пример кода:
print(add_everything_up(123.456, 'строка'))
print(add_everything_up('яблоко', 4215))
print(add_everything_up(123.456, 7))
print(add_everything_up(4, 3))

print(add_everything_up_option_2(123.456, 'строка'))
print(add_everything_up_option_2('яблоко', 4215))
print(add_everything_up_option_2(123.456, 7))
print(add_everything_up_option_2(4, 3))

# Вывод в консоль:
# 123.456строка
# яблоко4215
# 130.456
